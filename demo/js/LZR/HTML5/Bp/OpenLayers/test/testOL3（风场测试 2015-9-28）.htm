<!DOCTYPE html>
<html>
	<head>
		<title>testOL3 风场测试</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<link rel="stylesheet" href="../../../expand/ol3/ol.css" type="text/css">
		<script src="../../../expand/ol3/ol.js"></script>
		<script src="../../../../LZR.js"></script>
		<style>
			.map {
				height: 60%;
				width: 80%;
			}
			.zoom {
				height: 200px;
				width: 200px;
				top: 50px;
				left: 50px;
			}
		</style>
	</head>

	<body>
	<div id="map" class="map"></div>
	<div id="zoom"></div>
	<script>
	LZR.HTML5.jsPath = LZR.HTML5.upPath(4);
	LZR.HTML5.loadJs([
		LZR.HTML5.jsPath + "util/Graphics.js"
	]);
	var gp = new LZR.Util.Graphics();

	var view = new ol.View({
		zoom: 9,
		center: ol.proj.fromLonLat([116, 39]),
	});

	var map = new ol.Map({
		layers: [
			new ol.layer.Tile({
				source: new ol.source.OSM()
			})
		],
		target: 'map',
		view: view
	});

	// 风场数据 http://192.168.1.203/bpycserver/api/Grd/getWind?model=naqpms&isAverage=true&pTime=2015-01-07%2000&cTime=2015-01-07%2000&prediction=1&zone=3&lonmin=20.727891995250743&latmin=-3.0720782624722704&lonmax=189.47789201869608&latmax=57.611510785258666&step=20

	// http://192.168.1.203/bpycserver/api/Grd/getWindData?model=naqpms&isAverage=true&pTime=2015-01-07%2000&cTime=2015-01-07%2000&prediction=1&zone=3&lonmin=114.12093059618809&latmin=38.2755745166482&lonmax=116.75764934655612&latmax=39.17657311723305&rowNo=40&columnNo=30
	
	var data = {
		a1: {	// 左上角经纬度
			lon: 114,
			lat: 40,
		},
		a2: {	// 右下角经纬度
			lon: 118,
			lat: 38
		},
		un: 50,	// 横向个数
		vn: 40,	// 纵向个数
		data: [	// 风向数据
			[
				0,	// 风向角度
				5	// 风速（单位：米/秒）
			],[]
		],
		windSize: 500	//风速放大系数
	}

	// 随机生成风场数据
	for (i=0; i<data.vn; i++) {
		for (j=0; j<data.un; j++) {
			var angle = Math.random() * 2 * Math.PI;	// 风向
			var speed = Math.floor(Math.random() * 100) / 10;	// 风速
			data.data.push ([angle, speed]);
		}
	}

	map.on('postcompose', function(evt) {
		var ctx = evt.context;
		var r = map.getView().getResolution();
		var s = data.windSize/r;

		// 计算经纬度对应的画布坐标
		data.p1 = map.getPixelFromCoordinate( ol.proj.fromLonLat ([data.a1.lon, data.a1.lat]) );	// 左上角的画布坐标
		data.p2 = map.getPixelFromCoordinate( ol.proj.fromLonLat ([data.a2.lon, data.a2.lat]) );	// 右下角的画布坐标
		var x = data.p1[0];
		var y = data.p1[1];
		var up = (data.p2[0] - x) / (data.un-1);	// 横向间距
		var vp = (data.p2[1] - y) / (data.vn-1);	// 纵向间距

// console.log(x + ", " + y + ", " + up + ", " + vp + ", " + s);

		// 画范围
		ctx.beginPath();
		ctx.moveTo(x, y);
		ctx.lineTo(data.p2[0], y);
		ctx.lineTo(data.p2[0], data.p2[1]);
		ctx.lineTo(x, data.p2[1]);
		ctx.closePath();
		ctx.stroke();

		ctx.save();
		ctx.beginPath();
		for (i=0; i<data.vn; i++) {
			for (j=0; j<data.un; j++) {
				var d = data.data[i*data.un + j];
				if (d[1]>=0.2) {
					// 计算风长度
					var size = d[1] * s;
// console.log(size);
					if (size > 1) {
						// 画图

						p = gp.calcTransform(d[0], 1, 1, x + j*up, y + i*vp);
						ctx.setTransform(p[0], p[1], p[2], p[3], p[4], p[5]);

						// ctx.moveTo(0, 0);
						// ctx.lineTo(size, 0);

						var t = size*0.2;
						ctx.moveTo(size, 0);
						ctx.lineTo(0, t);
						ctx.lineTo(t, 0);
						ctx.lineTo(0, -t);

						ctx.closePath();
					}
				}
			}
		}
		ctx.stroke();
		// ctx.fill();
		ctx.restore();

	});

	</script>
	</body>
</html>
