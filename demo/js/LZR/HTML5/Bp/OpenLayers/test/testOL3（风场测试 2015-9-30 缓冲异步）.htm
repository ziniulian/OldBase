<!DOCTYPE html>
<html>
	<head>
		<title>testOL3 风场测试 - 缓冲异步</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<link rel="stylesheet" href="../../../expand/ol3/ol.css" type="text/css">
		<script src="../../../expand/ol3/ol.js"></script>
		<script src="../../../../LZR.js"></script>
		<style>
			.map {
				width: 1500px;
				height: 800px;
			}
		</style>
	</head>

	<body>
	<div id="myMap" class="map"></div>
	<script>
	LZR.HTML5.jsPath = LZR.HTML5.upPath(4);
	LZR.HTML5.loadJs([
		LZR.HTML5.jsPath + "util/Graphics.js",
		LZR.HTML5.jsPath + "HTML5/util/Ajax.js",
		LZR.HTML5.jsPath + "util/expand/json2.js"
	]);
	var gp = new LZR.Util.Graphics();

	var map = new ol.Map({
		layers: [
			new ol.layer.Tile({
				source: new ol.source.OSM()
			})
		],
		target: 'myMap',
		view: new ol.View({
			zoom: 9,
			center: ol.proj.fromLonLat([116, 39]),
		})
	});

	var w = 1500;
	var h = 800;
	var dx = 40;
	var dy = 30;
	var pad = 0;
	var end = [(w - 2*pad), (h - 2*pad)];
	var px = end[0] / (dx-1);
	var py = end[1] / (dy-1);
	var aj = new LZR.HTML5.Util.Ajax ();

	// 访问刘亮的风场数据
	var data = null;
	var ctx = null;
	var getData = function () {
console.log (new Date().valueOf());
		var p1 = ol.proj.toLonLat( map.getCoordinateFromPixel([pad, pad]) );
		var p2 = ol.proj.toLonLat( map.getCoordinateFromPixel(end) );
// LZR.HTML5.log(p1 + " , " + p2);
		aj.get (getURL (p1[0], p2[1], p2[0], p1[1], dx, dy), function (text) {
			data = JSON.parse( text );
			flush();
		});
	}
	var getURL = function (left, bottom, right, top, rowNo, columnNo) {
		var url = "http://192.168.1.130/gisserverv0010/api/GrdHandler/getWindData?model=naqpms&isAverage=true&prediction=1&z=1&zone=1&pTime=2015-07-03%2000&cTime=2015-07-03%2006";
		url += "&lonmin=" + left;
		url += "&latmin=" + bottom;
		url += "&lonmax=" + right;
		url += "&latmax=" + top;
		url += "&rowNo=" + rowNo;
		url += "&columnNo=" + columnNo;
		return url;
	}
	var ws = 3;
	var handleData = function (obj) {
		var r = [];
		for (var i=0; i<obj.length; i++) {
			var d = obj[i];
			var dp = map.getPixelFromCoordinate([d[0], d[1]]);
			var p = gp.calcTransform((d[2]/180 * Math.PI), 1, 1, dp[0], dp[1]);
			r.push([p, ws * d[3]]);
		}
		return r;
	}

	// 画风
	var drawWind = function () {
		if (data) {
			// var r = map.getView().getResolution();
			var d = handleData( data );

			ctx.save();
			ctx.beginPath();
			for (var i=0; i<d.length; i++) {
				// 画图
				var p = d[i][0];
				var size = d[i][1];
				ctx.setTransform(p[0], p[1], p[2], p[3], p[4], p[5]);

				// ctx.moveTo(0, 0);
				// ctx.lineTo(size, 0);

				var t = size*0.2;
				ctx.moveTo(size, 0);
				ctx.lineTo(0, t);
				ctx.lineTo(t, 0);
				ctx.lineTo(0, -t);

				ctx.closePath();
			}
			ctx.stroke();
			// ctx.fill();
			ctx.restore();

		}
	}

	var tot = 100;
	var to = null;
	var timeCall = function () {
		if (!isFlushed) {
			clearTimeout(to);
			to = setTimeout(getData, tot);
		} else {
			isFlushed = false;
		}
	}
	var isFlushed = false;
	var flush = function () {
		isFlushed = true;
		map.render();
	}
	map.on('postcompose', function(evt) {
		if (ctx) {
			timeCall();
		} else {
			ctx = evt.context;
			timeCall();
		}
		drawWind();
	});

	</script>
	</body>
</html>
