LZR.HTML5.loadJs([LZR.HTML5.jsPath+"util/Geography/ScaleRule.js",LZR.HTML5.jsPath+"HTML5/Bp/AirqMg/RegStat.js"]);LZR.HTML5.Bp.AirqMg.RegStatRule=function(a){this.rs=a.rs;this.min=a.min;this.max=a.max;this.dlon=a.dlon;this.dlat=a.dlat;this.base=new LZR.Util.Geography.ScaleRule({x:0,y:0,lat:a.latt,lon:a.lonl});this.r=new LZR.Util.Geography.ScaleRule({x:this.rs.map.max.w,y:this.rs.map.max.h,lat:a.latb,lon:a.lonr});this.r.computeScale(this.base);this.s=LZR.HTML5.Util.clone(this.base)};
LZR.HTML5.Bp.AirqMg.RegStatRule.prototype.className="LZR.HTML5.Bp.AirqMg.RegStatRule";LZR.HTML5.Bp.AirqMg.RegStatRule.prototype.version="0.0.0";
LZR.HTML5.Bp.AirqMg.RegStatRule.prototype.update=function(){var a=this.rs.map.s;this.s.x=a.left;this.s.y=a.top;this.s.lat.val=this.base.lat.val-this.base.latScale*a.top;this.s.lon.val=this.base.lon.val+this.base.lonScale*a.left;this.r.x=a.left+a.w;this.r.y=a.top+a.h;this.r.lat.val=this.s.lat.val-this.base.latScale*a.h;this.r.lon.val=this.s.lon.val+this.base.lonScale*a.w;var a=a.w/this.rs.map.max.w,b=this.r.computeRational(this.min*a,this.max*a);b.w/=a;return b};
LZR.HTML5.Bp.AirqMg.RegStatRule.prototype.getLonRod=function(){for(var a=(this.r.lon.val-this.s.lon.val)/this.dlon,b=[],c=0;c<this.dlon;c++)b.push(this.s.lon.val+a*c);b.push(this.r.lon.val);return b};LZR.HTML5.Bp.AirqMg.RegStatRule.prototype.getLatRod=function(){for(var a=(this.s.lat.val-this.r.lat.val)/this.dlat,b=[],c=0;c<this.dlat;c++)b.push(this.s.lat.val-a*c);b.push(this.r.lat.val);return b};
